diff --git a/threads/strerror.c b/threads/strerror.c
index f0aa038..a6161af 100644
--- a/threads/strerror.c
+++ b/threads/strerror.c
@@ -18,6 +18,7 @@
                                        declarations from <stdio.h> */
 #include <stdio.h>
 #include <string.h>                 /* Get declaration of strerror() */
+#include <errno.h>
 
 #define MAX_ERROR_LEN 256           /* Maximum length of string
                                        returned by strerror() */
@@ -27,10 +28,10 @@ static char buf[MAX_ERROR_LEN];     /* Statically allocated return buffer */
 char *
 strerror(int err)
 {
-    if (err < 0 || err >= _sys_nerr || _sys_errlist[err] == NULL) {
+    if (err < 0 || strerror(err) == NULL) {
         snprintf(buf, MAX_ERROR_LEN, "Unknown error %d", err);
     } else {
-        strncpy(buf, _sys_errlist[err], MAX_ERROR_LEN - 1);
+        strncpy(buf, strerror(err), MAX_ERROR_LEN - 1);
         buf[MAX_ERROR_LEN - 1] = '\0';          /* Ensure null termination */
     }
 
diff --git a/threads/strerror_tls.c b/threads/strerror_tls.c
index e14f1f1..85dcbf3 100644
--- a/threads/strerror_tls.c
+++ b/threads/strerror_tls.c
@@ -25,6 +25,7 @@
 #include <stdio.h>
 #include <string.h>                 /* Get declaration of strerror() */
 #include <pthread.h>
+#include <errno.h>
 
 #define MAX_ERROR_LEN 256           /* Maximum length of string in per-thread
                                        buffer returned by strerror() */
@@ -35,10 +36,10 @@ static __thread char buf[MAX_ERROR_LEN];
 char *
 strerror(int err)
 {
-    if (err < 0 || err >= _sys_nerr || _sys_errlist[err] == NULL) {
+    if (err < 0 || strerror(err) == NULL) {
         snprintf(buf, MAX_ERROR_LEN, "Unknown error %d", err);
     } else {
-        strncpy(buf, _sys_errlist[err], MAX_ERROR_LEN - 1);
+        strncpy(buf, strerror(err), MAX_ERROR_LEN - 1);
         buf[MAX_ERROR_LEN - 1] = '\0';          /* Ensure null termination */
     }
 
diff --git a/threads/strerror_tsd.c b/threads/strerror_tsd.c
index e2fc757..dede423 100644
--- a/threads/strerror_tsd.c
+++ b/threads/strerror_tsd.c
@@ -22,6 +22,7 @@
 #include <stdio.h>
 #include <string.h>                 /* Get declaration of strerror() */
 #include <pthread.h>
+#include <errno.h>
 #include "tlpi_hdr.h"
 
 static pthread_once_t once = PTHREAD_ONCE_INIT;
@@ -73,10 +74,10 @@ strerror(int err)
             errExitEN(s, "pthread_setspecific");
     }
 
-    if (err < 0 || err >= _sys_nerr || _sys_errlist[err] == NULL) {
+    if (err < 0 || strerror(err) == NULL) {
         snprintf(buf, MAX_ERROR_LEN, "Unknown error %d", err);
     } else {
-        strncpy(buf, _sys_errlist[err], MAX_ERROR_LEN - 1);
+        strncpy(buf, strerror(err), MAX_ERROR_LEN - 1);
         buf[MAX_ERROR_LEN - 1] = '\0';          /* Ensure null termination */
     }
 
diff --git a/time/t_stime.c b/time/t_stime.c
index 683defd..c319593 100644
--- a/time/t_stime.c
+++ b/time/t_stime.c
@@ -38,7 +38,7 @@ main(int argc, char *argv[])
         fatal("strptime failed");
 
     t = mktime(&tm);
-    if (stime(&t) == -1)
+    if (settimeofday(&t) == -1)
         errExit("stime");
 
     exit(EXIT_SUCCESS);
