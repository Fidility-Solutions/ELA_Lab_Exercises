!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/fidilitysolutions/ELA_Lab_Exercises/test-apps/i2c-example/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
BOARD	i2c-eeprom-read-write.c	/^#define BOARD /;"	d	file:
DEVICE_ADDR	i2c-eeprom-read-write.c	/^#define DEVICE_ADDR /;"	d	file:
DEVICE_PATH	i2c-eeprom-read-write.c	/^    #define DEVICE_PATH /;"	d	file:
PAGE_SIZE	i2c-eeprom-read-write.c	/^#define PAGE_SIZE /;"	d	file:
buffer	i2c-eeprom-read-write.c	/^char buffer[PAGE_SIZE + 2]; \/\/ 64 bytes + 2 for the address$/;"	v	typeref:typename:char[]
file_desc	i2c-eeprom-read-write.c	/^int file_desc;$/;"	v	typeref:typename:int
fill_buffer	i2c-eeprom-read-write.c	/^void fill_buffer(char *buf)$/;"	f	typeref:typename:void
main	i2c-eeprom-read-write.c	/^int main(void)$/;"	f	typeref:typename:int
read_from_device	i2c-eeprom-read-write.c	/^int read_from_device(char addr_hi, char addr_lo, char * buf, int len)$/;"	f	typeref:typename:int
setupI2C	i2c-eeprom-read-write.c	/^void setupI2C()$/;"	f	typeref:typename:void
teardownI2C	i2c-eeprom-read-write.c	/^void teardownI2C()$/;"	f	typeref:typename:void
write_to_device	i2c-eeprom-read-write.c	/^int write_to_device(char addr_hi, char addr_lo, char * buf, int len)$/;"	f	typeref:typename:int
